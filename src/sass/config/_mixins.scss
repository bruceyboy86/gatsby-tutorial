// Mixins



@function em($pixels, $context){
    @return #{$pixels/$context}em;
}

@mixin set_type_styles($m: base){
  $_map: map-get($fs_map, $m);
  font-size: em(map-get($_map, fontsize), $fs);
  line-height: em(map-get($_map, leading), map-get($_map, fontsize));
  padding-top: em(map-get($_map, before), map-get($_map, fontsize));
  padding-bottom: em(map-get($_map, after), map-get($_map, fontsize));
}

@mixin marginCenter{
  margin-left: auto;
  margin-right: auto;
}

@mixin cleanList{
  margin: 0;
  padding: 0;
  width: 100%;
  list-style:none;
  li, ol{
    margin: 0 1em;
    padding: 0;
    display: inline-block;
  }
}

@mixin caps{
  text-transform: uppercase;
  letter-spacing: .01em;
}

@mixin setFont($weight: 'light'){
  font-style: normal;
  font-family: $light; font-weight: 200;
  text-rendering:auto;
  -webkit-font-smoothing:antialiased;
  -moz-osx-font-smoothing:grayscale;
}

@mixin mq($bp){
  @media(max-width:$bp){
    @content;
  }
}

@mixin accordionFont{
    @include setFont('light');
    font-size: #{$fs}px;
}

@mixin headers{
  @for $i from 1 through 5{
    h#{$i}{
      @include setFont('light');
      color:$nuc_orange;
      // @include set_type_styles(fs_#{$i});
      @if $i==6{ color: $nuc_grey }
      a,a:hover,a:active{
        color: inherit;
      }
      a:visited{
        color: $nuc_grey;
      }
    }
  }
}

@mixin transition($args...) {
  -webkit-transition: $args;
  -moz-transition: $args;
  -ms-transition: $args;
  -o-transition: $args;
  transition: $args;
}